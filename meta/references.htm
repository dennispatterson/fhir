<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
       "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<head>
  <title>Resource Definitions - FHIR v0.11</title>

  <meta charset="utf-8"/>
  <meta content="width=device-width, initial-scale=1.0" name="viewport"/>
  <meta content="http://hl7.org/fhir" name="author"/>

  <link rel="stylesheet" href="fhir.css"/>


    <!-- Bootstrap core CSS -->
  <link rel="stylesheet" href="./dist/css/bootstrap.css"/>
  <link rel="stylesheet" href="./assets/css/bootstrap-fhir.css"/>

    <!-- Project extras -->
  <link rel="stylesheet" href="./assets/css/project.css"/>
  <link rel="stylesheet" href="./assets/css/pygments-manni.css"/>

    <!-- HTML5 shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!-- [if lt IE 9]>
  <script src="./assets/js/html5shiv.js"></script>
  <script src="./assets/js/respond.min.js"></script>
  <![endif] -->

    <!-- Favicons -->
  <link sizes="144x144" rel="apple-touch-icon-precomposed" href="./assets/ico/apple-touch-icon-144-precomposed.png"/>
  <link sizes="114x114" rel="apple-touch-icon-precomposed" href="./assets/ico/apple-touch-icon-114-precomposed.png"/>
  <link sizes="72x72" rel="apple-touch-icon-precomposed" href="./assets/ico/apple-touch-icon-72-precomposed.png"/>
  <link rel="apple-touch-icon-precomposed" href="./assets/ico/apple-touch-icon-57-precomposed.png"/>
  <link rel="shortcut icon" href="./assets/ico/favicon.png"/>

</head>
<body>
	<div id="segment-header" class="segment">  <!-- segment-header -->	
		<div class="container">  <!-- container -->
			<a id="logo" href="http://hl7.org/fhir"><img alt="logo fhir" src="./assets/images/fhir-logo-www.png"/> </a>
			
			<div id="hl7-nav">
				 <a id="hl7-logo" href="http://www.hl7.org">
					<img height="50" alt="visit the hl7 website" width="42" src="./assets/images/hl7-logo.png"/>
				</a> 
				<a alt="link to hl7 community wiki" href="http://wiki.hl7.org/index.php?title=FHIR_References_Page">Community Input (wiki)</a> 
			</div>       	
		</div>
		<div class="container">  <!-- container -->
	</div></div>  <!-- /segment-header -->	


	<div id="segment-navbar" class="segment">  <!-- segment-navbar -->
		<div id="stripe"> </div>
		<div class="container">  <!-- container -->
   <!-- HEADER CONTENT -->
 	      		
 	      		      		
			<div class="navbar navbar-inverse">
				<div class="container">
					<button data-target=".navbar-inverse-collapse" class="navbar-toggle" data-toggle="collapse" type="button">
						<span class="icon-bar"/>
						<span class="icon-bar"/>
						<span class="icon-bar"/>
					</button>
					<a class="navbar-brand hidden" href="index.htm">FHIR</a>
					<div class="nav-collapse collapse navbar-inverse-collapse">
						<ul class="nav navbar-nav">
              <li><a href="index.htm">Home</a></li>
              <li><a href="documentation.htm">Documentation</a></li>
              <li><a href="implementation.htm">Implementation</a></li>
              <li><a href="resourcelist.htm">Resources</a></li>
              <li><a href="clinical.htm">Clinical</a></li>
              <li><a href="administration.htm">Administrative</a></li>
              <li><a href="infrastructure.htm">Infrastructure</a></li>

						</ul>
					</div>  <!-- /.nav-collapse -->
				</div>  <!-- /.container -->
			</div>  <!-- /.navbar -->
      		
				
  <!-- /HEADER CONTENT -->				
		</div>  <!-- /container -->
	</div>  <!-- /segment-navbar -->
	

	<div id="segment-breadcrumb" class="segment">  <!-- segment-breadcrumb -->
		<div class="container">  <!-- container -->	
			<ul class="breadcrumb">
        <li><a href="index.htm">Home</a></li>
        <li><a href="documentation.htm">Documentation</a></li>        <li><a href="resources.htm">Resource Definitions</a></li>        <li><b>References</b></li>
			</ul>	
		</div>  <!-- /container -->
	</div>  <!-- /segment-breadcrumb -->
	

	<div id="segment-content" class="segment">  <!-- segment-content -->
	<div class="container">  <!-- container -->
            <div class="row">
            	<div class="inner-wrapper">
  <!-- CONTENT CONTENT -->


<div class="col-9">

<a name="idref"/>
<a name="id"/>
<h2>Internal References <span class="sectioncount">1.10.2<a name="1.10.2"> </a></span></h2>
<p>
There are 4 cases where elements inside a resource reference each other:
</p>
<ul>
 <li>Inside a <a href="datatypes.htm#CodeableConcept">CodeableConcept data type to identify the primary encoding</a></li>
 <li>An &lt;img src=&quot;&quot;/&gt; reference in the narrative, referring to an image found in the resource</li>
 <li>Between elements in the narrative and structured data elements</li>
 <li>Between a ResourceReference and an <a href="references.htm#contained">contained resource</a></li>
</ul>
<p>
These references are done using an id/idref based approach, where a source element indicates that it 
has the same content as the target element. The target element has an attribute &quot;id&quot; which must 
have a unique value within the resource with regard to any other id attributes. The &quot;id&quot; attribute is not in any namespace.
The source element reference must refer to an attribute in the same resource (or, for a CodeableConcept, inside the
same datatype). 
</p>
<div class="example">
<pre class="xml">
  &lt;example&gt;
    &lt;target id=&quot;a1&quot;&gt;
      &lt;child&gt;...&lt;/child&gt;
    &lt;/target&gt;
    &lt;-- other stuff --&gt;
    &lt;source idref=&quot;a1&quot;&gt;
  &lt;/example&gt;
</pre>
</div>
<p>
In a single resource, this works like xml:id/idref, but there is an important difference: the 
uniqueness and resolution scope of these id references is within the resource that contains them. If multiple
resources are combined into a single piece of XML, such as an <a href="xml.htm#atom">atom feed</a>, duplicate 
values may occur between resources. This must be managed by applications reading the resources.
</p>
<p>
Note that all references between the xhtml elements and the data elements must be understood to 
establish a &quot;derived from&quot; relationship, where the derived content (whether text or data) refers 
to the source content.  Note that this means some references may be forward references (references to 
elements defined later in the instance).
</p>


<a name="ResourceReference"> </a>
<a name="Resource"> </a>
<a name="references"> </a>
<a name="Identification"> </a>
<h2>References between resources <span class="sectioncount">1.10.2<a name="1.10.2"> </a></span></h2>
<p>
The defined elements in a resource includes many references to other resources. 
The resources combine to build a web of information about healthcare. 
</p>
<p>
References are always defined in one particular direction - from one resource (source) to another (target).
The corresponding reverse relationship from the target to the source exists in a logical sense, but is 
not represented explicitly in the resource. Navigating these reverse relationships requires some 
external infrastructure to track the relationship between resources.
</p>
<p>
Because resources are processed independently, relationships are not considered to be transitive. 
For example, if a <a href="condition.htm">Condition</a> resource references a particular 
<a href="patient.htm">Patient</a> as its subject, and it links to a <a href="procedure.htm">Procedure</a>
resource as its cause, there is no automatic rule or implication that the procedure 
has the same patient as its subject. Instead, the subject of the procedure must be established 
directly in the procedure itself. Another way to state this is that the context of the subject
is not &quot;inherited&quot; and it does not &quot;conduct&quot; along the relationship to procedure. 
The only exception to this in the case of contained resources (see below). Note that in
practice, the relationships do need to describe a logical and coherent record.
</p>

<p>
In a resource, 
references are represented with a type, a reference, and a text description.
The key property of the reference is the <i>reference</i> - resources are identified and addressed by their URL.
The actual reference looks like this (see <a href="formats.htm#syntax">&quot;XML Format&quot;</a>
for details of the way resource contents are described):
</p>

<pre class="spec">
&lt;<a title="A reference from one resource to another." class="dict" href="references-definitions.htm#ResourceReference"><b>[name]</b></a> xmlns=&quot;http://hl7.org/fhir&quot;&gt;
 &lt;!-- from Element: <a href="extensibility.htm">extension</a> --&gt;
 &lt;<a title="The name of one of the resource types defined in this specification to identify the type of the resource being referenced." class="dict" href="references-definitions.htm#ResourceReference.type"><b>type</b></a> value=&quot;[<span style="color: darkgreen"><a href="datatypes.htm#code">code</a></span>]&quot;/&gt;<span style="color: Gray">&lt;!--</span> <span title="Inv-1: Must have a type if a reference is provided" style="color: deeppink"><b>0..1</b></span> <span style="color: navy"><a style="color: navy" href="resource-types.htm">Resource Type</a></span><span style="color: Gray"> --&gt;</span>
 &lt;<a title="A reference to a location at which the other resource is found. The reference may a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources." class="dict" href="references-definitions.htm#ResourceReference.reference"><b>reference</b></a> value=&quot;[<span style="color: darkgreen"><a href="datatypes.htm#string">string</a></span>]&quot;/&gt;<span style="color: Gray">&lt;!--</span> <span title="Inv-1: Must have a type if a reference is provided" style="color: deeppink"><b>0..1</b></span> <span style="color: navy">Relative, internal or absolute URL reference</span><span style="color: Gray"> --&gt;</span>
 &lt;<a title="Plain text narrative that identifies the resource in addition to the resource reference." class="dict" href="references-definitions.htm#ResourceReference.display"><b>display</b></a> value=&quot;[<span style="color: darkgreen"><a href="datatypes.htm#string">string</a></span>]&quot;/&gt;<span style="color: Gray">&lt;!--</span> <span style="color: brown"><b>0..1</b></span> <span style="color: navy">Text alternative for the resource</span><span style="color: Gray"> --&gt;</span>
&lt;/[name]&gt;
</pre>

<h3>
Terminology Bindings
 <span class="sectioncount">1.10.2.1<a name="1.10.2.1"> </a></span></h3>
<table class="grid">
 <tr><th>Path</th><th>Definition</th><th>Type</th><th>Reference</th></tr>
 <tr><td title="ResourceType" valign="top">ResourceReference.type </td><td valign="top">One of the resource types defined as part of FHIR</td><td><a href="terminologies.htm#codeable">Incomplete</a></td><td valign="top"><a href="resource-types.htm">http://hl7.org/fhir/resource-types</a></td> </tr>
</table>
<p> </p>



<p>&nbsp;</p>

<p>Notes:</p>
<ul>
 <li>The <i>type</i> must specify the resource type, whether or not the type of the resource reference is fixed for the element in the resource definition</li>
 <li>The <i>reference</i> element contains a url that is either an absolute URL, or a relative URL that is relative to the <a href="http.htm#root">Service Base URL</a>, or an internal fragment reference (see below)</li>
 <li>Using absolute URLs provides a stable scalable approach suitable for a cloud/web context, while using relative/logical references provides a 
   flexible approach suitable for use when trading across closed ecosystem boundaries. (see <a href="use.htm#identity">implementation issues for further discussion</a>)</li>
 <li>Absolute URLs do not need to point to a <a href="http.htm">FHIR RESTful server</a>, though this is the preferred approach. If the tail of the url 
   conforms to the structure &quot;/[type]/@[id]&quot; or &quot;/[type]/@[id]/history/@[id]&quot; then it should be assumed that the reference is to a <a href="http.htm">FHIR RESTful server</a>. 
   Whether or not the reference is to a FHIR RESTful server, the reference must point to a Resource as defined by this specification</li>
 <li>URLs are always considered to be case-sensitive and lowercase is preferred</li>
 <li>The <i>display</i> is generally not the same content as the Resource.text of the referenced resource.  The purpose is to 
   identify what's being referenced, not to more fully describe it</li>
</ul>

<div class="use">
<p><b>Constraints</b></p>
<p>
<ul><li><b title="Formal Invariant Identifier">Inv-1</b>: Must have a type if a reference is provided (xpath: <span style="font-family: Courier New, monospace">exists(f:type) or not(exists(f:reference))</span>)</li><li><b title="Formal Invariant Identifier">Inv-2</b>: Must have a local reference if the resource is provided inline (xpath: <span style="font-family: Courier New, monospace">not(starts-with(f:reference/@value, '#')) or exists(ancestor::a:content/f:*/f:contained/f:*[local-name(.)=current()/f:type/@value and @id=substring-after(current()/f:reference/@value, '#')]|/f:*/f:contained/f:*[local-name(.)=current()/f:type/@value and @id=substring-after(current()/f:reference/@value, '#')])</span>)</li></ul>
</p>
</div>

<div class="example">
<p>A relative reference to the <a href="patient.htm">patient</a> &quot;034AB16&quot; in an element named &quot;context&quot; on a FHIR RESTful server:</p>
<pre class="xml" fragment="ResourceReference">
  &lt;context&gt;
    &lt;type value=&quot;Patient&quot; /&gt;
    &lt;reference value=&quot;patient/@034AB16&quot; /&gt;
  &lt;/context&gt;
</pre>
<p>An absolute reference to a <a href="profile.htm">resource profile</a> in an element named &quot;profile&quot;:</p>
<pre class="xml" fragment="ResourceReference">
  &lt;profile&gt;
    &lt;type value=&quot;Profile&quot; /&gt;
    &lt;reference value=&quot;http://fhir.hl7.org/svc/profile/@c8973a22-2b5b-4e76-9c66-00639c99e61b&quot; /&gt;
  &lt;/profile&gt;
</pre>
<p><i>Note that HL7 has not yet actually created a profile registry, nor decided on a URL for it</i>.</p>
<p>
A short display text that provides a human readable identification of the resource may be provided:
</p>
<pre class="xml" fragment="ResourceReference">
  &lt;custodian&gt;
    &lt;type value=&quot;Organization&quot; /&gt;
    &lt;reference value=&quot;organization/@123&quot; /&gt;
    &lt;display value=&quot;HL7, Inc&quot; /&gt;
  &lt;/custodian&gt;
</pre>
<p>
This text can be used by a system that is unable to resolve the reference to an actual resource.
</p>
</div>

<a name="contained"> </a>
<h3>Contained Resources <span class="sectioncount">1.10.2.2<a name="1.10.2.2"> </a></span></h3>
<p>
In some circumstances, the content referred to in the resource reference does not have an independent 
existence apart from the resource that contains it - it cannot be identified independently, and nor 
can it have its own independent transaction scope. Typically, such circumstances arise where the resource
is being assembled by a secondary user of the source data, such as a middleware engine. If the data available
when the resource is constructed does not include record keys or absolute identification information, then
a properly identified resource cannot be assembled, and even if an arbitrary identification was associated
with it, the resource could never be the subject of a transaction outside the context of the resource that
refers to it.
</p>
<p>
In these circumstances, the resource is placed directly in line in the reference. <b>This should never be 
done when the content can be identified properly, as once identification is lost, it is extremely difficult 
(and context dependent) to restore it again.</b>
</p>
<div class="example">
<p>
An example of a contained resource:
</p>
<pre class="xml">   <!-- Can't fragment test this - too incomplete -->
 &lt;Document xmlns=&quot;http://hl7.org/fhir&quot;&gt;
  &lt;extension&gt;...&lt;/extension&gt;
  &lt;text&gt;...&lt;/text&gt;
  &lt;contained&gt;
    &lt;Organization id=&quot;org1&quot;&gt;
      &lt;!-- whatever information is available --&gt;
    &lt;/Organization&gt;
  &lt;/contained&gt;
  &lt;information&gt;
    &lt;!-- other attributes --&gt;
    &lt;custodian&gt;
      &lt;type value=&quot;Organization&quot; /&gt;
      &lt;reference value=&quot;#org1&quot; /&gt;
    &lt;/custodian&gt;
    &lt;!-- other attributes --&gt;
  &lt;information&gt;
 &lt;/Document&gt;
</pre>
<p>
The same example in JSON:
</p>
<pre class="json"> 
{ &quot;Document&quot; : {
  &quot;extension&quot; : { ... },
  &quot;text&quot; : { .. },
  &quot;contained: [
    {&quot;Organization&quot; : {
      &quot;_id&quot; : &quot;org1&quot;,
      .. whatever information is available ...
	}}
  ]
  &quot;information: {
    ... other attributes ...
    &quot;custodian&quot; : {
      &quot;type&quot; : { &quot;value&quot; : &quot;Organization&quot; },
      &quot;url&quot; : { &quot;value&quot; : &quot;#org1&quot; }
	}
    ... other attributes ...
  }
}}
</pre>
</div>

<p>
The type and url are always required, even though somewhat redundant in this case, to ensure that a
single approach to resolving resource references can be used - simply by resolving the URL, and accessing
accordingly.
</p>
<p>
Some notes about use and interpretation of contained resources:
</p>

<ul>
  <li>Contained resources share the same internal id resolution space as the parent resource</li>
  <li>Contained resources do not contain additional contained resources</li>
  <li>Resources that are contained inline also &quot;inherit&quot; context from their parent resource. For instance, if 
    the parent resource contains a &quot;subject&quot;, and the contained resource also has a subject element defined, 
    but does not specify any subject, a processing application may infer that the subject is the same. Note,
    however, that such inferences are specific to a particular circumstance. There is no rule, for instance, 
	that the meaning of the &quot;subject&quot; element is the same in both parent and contained resources</li>
  <li>Contained resources do not need to contain any narrative</li>
</ul>

<a name="atom-refs"> </a>
<h4>Resolving references to Resources <span class="sectioncount">1.10.2.2.1<a name="1.10.2.2.1"> </a></span></h4>
<p>
Readers of the resources bundles should always look through the resources in the 
atom feed when a <a href="#Resource">resource reference</a> is encountered. 
The resource reference may have the resource type and a relative url, 
which is the id of the target, like this:
</p>
<div class="example">
<pre class="xml" fragment="ResourceReference">
  &lt;institution&gt;
    &lt;type value=&quot;Organization&quot; /&gt;
    &lt;reference value=&quot;organization/@23&quot; /&gt;
  &lt;/institution&gt;
</pre>
</div>
<p>
A reader trying to find the resource this <i>institution</i> element identifies 
should always look through the entries in the atom feed prior to looking 
anywhere else for the institution. If the feed.id for the resource that contains
the link above is http://example.org/, then the absolute 
URL is http://example.org/organization/@23. If that organization is in the feed, 
it would look like this:
</p>
<div class="example">
<pre class="xml">
   .. feed ..
  &lt;entry&gt;
    .. 
    &lt;id&gt;http://example.org/organization/@23&lt;id&gt;
    .. 

    &lt;content type=&quot;text/xml&quot;&gt;
      &lt;Organization xmlns=&quot;http://hl7.org/fhir&quot;&gt;
         &lt;!-- Content for the resource --&gt;
      &lt;/Organization&gt;
    &lt;/content&gt;
  ... feed ...
</pre>
</div>
<p>
It would also be possible to locate the resource by an absolute url. In this case, 
the <i>id</i> element contains a direct reference to the location of the resource:
</p>
<div class="example">
<pre class="xml" fragment="ResourceReference">
  &lt;institution&gt;
    &lt;type value=&quot;Organization&quot; /&gt;
    &lt;reference value=&quot;http://example.org/organization/@23&quot; /&gt;
  &lt;/institution&gt;
</pre>
</div>

<p>
If there is no resource in the atom feed with an appropriate URL, then 
the application may try accessing the provided URL directly or use some 
other implementation-specific method for resolving how to find the resource.
</p>



</div>


				</div>  <!-- /inner-wrapper -->
            </div>  <!-- /row -->
        </div>  <!-- /container -->
    </div>  <!-- /segment-content -->


	<div id="segment-footer" class="segment">  <!-- segment-footer -->
		<div class="container">  <!-- container -->
			<div class="inner-wrapper">
				<p>
        &copy; HL7.org 2011 - 2013. FHIR v0.11-1711 generated on Tue, Aug 13, 2013 07:57+1000. <a href="license.htm">License</a>. <a href="qa.htm">QA Report</a>
        <br/>
        <span style="color: #FFFF77">
        Warning: This version of FHIR is the <a href="ballot-intro.htm">DSTU ballot</a>, and the stable version for the September/October connectathons. 
        Implementers are welcome to experiment with the content defined here, but should note that the contents are subject to change without prior notice.
        </span>
        </p>
			</div>  <!-- /inner-wrapper -->
		</div>  <!-- /container -->
	</div>  <!-- /segment-footer -->
	
	<div id="segment-post-footer" class="segment hidden">  <!-- segment-post-footer -->
		<div class="container">  <!-- container -->
		</div>  <!-- /container -->
	</div>  <!-- /segment-post-footer -->
    
      <!-- JS and analytics only. -->
      <!-- Bootstrap core JavaScript
================================================== -->
  <!-- Placed at the end of the document so the pages load faster -->
<script src="./assets/js/jquery.js"/>
<script src="./dist/js/bootstrap.min.js"/>
<script src="./assets/js/respond.min.js"/>

<script src="./assets/js/fhir.js"/>

  <!-- Analytics Below
================================================== -->

</body>
</html>