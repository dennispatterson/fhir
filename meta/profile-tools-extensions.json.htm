<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
<head>
 <title>Extensions defined by the build tools. These extensions are candidates for being elevated into the core</title>
 <link rel="Stylesheet" href="fhir.css" type="text/css" media="screen"/>
</head>
<body>
<p>&nbsp;</p>
<div class="example">
<p>Extensions defined by the build tools. These extensions are candidates for being elevated into the core</p>
<p><a href="profile-tools-extensions.json">Raw JSON</a></p>
<pre class="json">
{
  &quot;Profile&quot;:{
    &quot;text&quot;:{
      &quot;status&quot;:{
        &quot;value&quot;:&quot;generated&quot;
      },
      &quot;div&quot;:&quot;&lt;div&gt;\n     &lt;p&gt;&lt;b&gt;http://hl7.org/fhir/tools/extensions&lt;\/b&gt;&lt;\/p&gt;\n     &lt;p&gt;Extensions defined by the build tools. These extensions are candidates for being elevated into the core.&lt;\/p&gt;\n     &lt;table&gt;\n      &lt;tr&gt;\n        &lt;td&gt;&lt;b&gt;Code&lt;\/b&gt;&lt;\/td&gt;\n        &lt;td&gt;&lt;b&gt;Context&lt;\/b&gt;&lt;\/td&gt;\n        &lt;td&gt;&lt;b&gt;Type&lt;\/b&gt;&lt;\/td&gt;\n        &lt;td&gt;&lt;b&gt;Cardinality&lt;\/b&gt;&lt;\/td&gt;\n        &lt;td&gt;&lt;b&gt;Notes&lt;\/b&gt;&lt;\/td&gt;\n      &lt;\/tr&gt;\n      &lt;tr&gt;\n        &lt;td&gt;comment&lt;\/td&gt;\n        &lt;td&gt;ValueSet.compose.include.code&lt;\/td&gt;\n        &lt;td&gt;string&lt;\/td&gt;\n        &lt;td&gt;0..1&lt;\/td&gt;\n        &lt;td&gt;This is used in various FHIR value sets to make comments on how particular codes are used when the formal definition is a little abstract or vague, but it's not clear whether it belongs in the actual value set resource&lt;\/td&gt;\n      &lt;\/tr&gt;\n      &lt;tr&gt;\n        &lt;td&gt;display&lt;\/td&gt;\n        &lt;td&gt;ValueSet.compose.include.code&lt;\/td&gt;\n        &lt;td&gt;string&lt;\/td&gt;\n        &lt;td&gt;0..1&lt;\/td&gt;\n        &lt;td&gt;An alternative display is used to tailor a code's description to a particular use case. Doing this is dangerous, because it's easy to introduce a different meaning for the code in this context, but it's also useful to make the display suitable for a particular kind of user in a particular kind of context&lt;\/td&gt;\n      &lt;\/tr&gt;\n      &lt;tr&gt;\n        &lt;td&gt;definition&lt;\/td&gt;\n        &lt;td&gt;ValueSet.compose.include.code&lt;\/td&gt;\n        &lt;td&gt;string&lt;\/td&gt;\n        &lt;td&gt;0..1&lt;\/td&gt;\n        &lt;td&gt;This is provided for when the source code system doesn't actually provide a definition (there are many such). Providing an definition for a code should not be done where the underlying code system provides a definition&lt;\/td&gt;\n      &lt;\/tr&gt;\n      &lt;tr&gt;\n        &lt;td&gt;issue-source&lt;\/td&gt;\n        &lt;td&gt;OperationOutcome&lt;\/td&gt;\n        &lt;td&gt;string&lt;\/td&gt;\n        &lt;td&gt;0..1&lt;\/td&gt;\n        &lt;td&gt;Helps a user track down the source of the problem&lt;\/td&gt;\n      &lt;\/tr&gt;\n    &lt;\/table&gt;\n    &lt;\/div&gt;&quot;
    },
    &quot;contained&quot;:[
      {
        &quot;ValueSet&quot;:{
          &quot;_id&quot;:&quot;v1&quot;,
          &quot;name&quot;:{
            &quot;value&quot;:&quot;OperationOutcomeSource&quot;
          },
          &quot;description&quot;:{
            &quot;value&quot;:&quot;Where in the code - schema, schematron, or validator - an error message comes from&quot;
          },
          &quot;status&quot;:{
            &quot;value&quot;:&quot;draft&quot;
          },
          &quot;define&quot;:{
            &quot;system&quot;:{
              &quot;value&quot;:&quot;http://hl7.org/fhir/operation-outcome-source&quot;
            },
            &quot;caseSensitive&quot;:{
              &quot;value&quot;:true
            },
            &quot;concept&quot;:[
              {
                &quot;code&quot;:{
                  &quot;value&quot;:&quot;ExampleValidator&quot;
                },
                &quot;display&quot;:{
                  &quot;value&quot;:&quot;ExampleValidator&quot;
                },
                &quot;definition&quot;:{
                  &quot;value&quot;:&quot;The error comes from the publication example validator (only in the build process)&quot;
                }
              },
              {
                &quot;code&quot;:{
                  &quot;value&quot;:&quot;ProfileValidator&quot;
                },
                &quot;display&quot;:{
                  &quot;value&quot;:&quot;ProfileValidator&quot;
                },
                &quot;definition&quot;:{
                  &quot;value&quot;:&quot;The error comes from the code that checks that profiles are valid&quot;
                }
              },
              {
                &quot;code&quot;:{
                  &quot;value&quot;:&quot;ResourceValidator&quot;
                },
                &quot;display&quot;:{
                  &quot;value&quot;:&quot;ResourceValidator&quot;
                },
                &quot;definition&quot;:{
                  &quot;value&quot;:&quot;The error comes from the code the validates the basic resource definitions&quot;
                }
              },
              {
                &quot;code&quot;:{
                  &quot;value&quot;:&quot;InstanceValidator&quot;
                },
                &quot;display&quot;:{
                  &quot;value&quot;:&quot;InstanceValidator&quot;
                },
                &quot;definition&quot;:{
                  &quot;value&quot;:&quot;The error comes from code that checks instances against the base profiles and any additional identified profiles&quot;
                }
              },
              {
                &quot;code&quot;:{
                  &quot;value&quot;:&quot;Schema&quot;
                },
                &quot;display&quot;:{
                  &quot;value&quot;:&quot;Schema&quot;
                },
                &quot;definition&quot;:{
                  &quot;value&quot;:&quot;The error comes from checking the instance against the schemas&quot;
                }
              },
              {
                &quot;code&quot;:{
                  &quot;value&quot;:&quot;Schematron&quot;
                },
                &quot;display&quot;:{
                  &quot;value&quot;:&quot;Schematron&quot;
                },
                &quot;definition&quot;:{
                  &quot;value&quot;:&quot;The error comes from checking the instance against the invariants defined in the specification&quot;
                }
              }
            ]
          }
        }
      }
    ],
    &quot;identifier&quot;:{
      &quot;value&quot;:&quot;http://hl7.org/fhir/tools/extensions&quot;
    },
    &quot;name&quot;:{
      &quot;value&quot;:&quot;Extensions defined by the FHIR build tools&quot;
    },
    &quot;publisher&quot;:{
      &quot;value&quot;:&quot;FHIR Project Team&quot;
    },
    &quot;telecom&quot;:[
      {
        &quot;system&quot;:{
          &quot;value&quot;:&quot;url&quot;
        },
        &quot;value&quot;:{
          &quot;value&quot;:&quot;http://hl7.org/fhir&quot;
        }
      }
    ],
    &quot;description&quot;:{
      &quot;value&quot;:&quot;Extensions defined by the build tools. These extensions are candidates for being elevated into the core&quot;
    },
    &quot;status&quot;:{
      &quot;value&quot;:&quot;draft&quot;
    },
    &quot;date&quot;:{
      &quot;value&quot;:&quot;2013-07-07&quot;
    },
    &quot;extensionDefn&quot;:[
      {
        &quot;code&quot;:{
          &quot;value&quot;:&quot;comment&quot;
        },
        &quot;contextType&quot;:{
          &quot;value&quot;:&quot;resource&quot;
        },
        &quot;context&quot;:[
          {
            &quot;value&quot;:&quot;ValueSet.compose.include.code&quot;
          }
        ],
        &quot;definition&quot;:{
          &quot;short&quot;:{
            &quot;value&quot;:&quot;Comment about the use of this code in this context&quot;
          },
          &quot;formal&quot;:{
            &quot;value&quot;:&quot;A comment that explains how this code is used in this context (where the value set is expected to be used)&quot;
          },
          &quot;comments&quot;:{
            &quot;value&quot;:&quot;This is used in various FHIR value sets to make comments on how particular codes are used when the formal definition is a little abstract or vague, but it's not clear whether it belongs in the actual value set resource&quot;
          },
          &quot;requirements&quot;:{
            &quot;value&quot;:&quot;Too many codes have very abstract definitions, and the correct use or purpose of the code isn't sufficiently clear from the definition&quot;
          },
          &quot;min&quot;:{
            &quot;value&quot;:0
          },
          &quot;max&quot;:{
            &quot;value&quot;:&quot;1&quot;
          },
          &quot;type&quot;:[
            {
              &quot;code&quot;:{
                &quot;value&quot;:&quot;string&quot;
              }
            }
          ],
          &quot;isModifier&quot;:{
            &quot;value&quot;:false
          }
        }
      },
      {
        &quot;code&quot;:{
          &quot;value&quot;:&quot;display&quot;
        },
        &quot;contextType&quot;:{
          &quot;value&quot;:&quot;resource&quot;
        },
        &quot;context&quot;:[
          {
            &quot;value&quot;:&quot;ValueSet.compose.include.code&quot;
          }
        ],
        &quot;definition&quot;:{
          &quot;short&quot;:{
            &quot;value&quot;:&quot;A different display for this code&quot;
          },
          &quot;formal&quot;:{
            &quot;value&quot;:&quot;A different display to use when this code is used as part of this value set&quot;
          },
          &quot;comments&quot;:{
            &quot;value&quot;:&quot;An alternative display is used to tailor a code's description to a particular use case. Doing this is dangerous, because it's easy to introduce a different meaning for the code in this context, but it's also useful to make the display suitable for a particular kind of user in a particular kind of context&quot;
          },
          &quot;requirements&quot;:{
            &quot;value&quot;:&quot;Many codes have displays that are inappropriate in a particular context of use&quot;
          },
          &quot;min&quot;:{
            &quot;value&quot;:0
          },
          &quot;max&quot;:{
            &quot;value&quot;:&quot;1&quot;
          },
          &quot;type&quot;:[
            {
              &quot;code&quot;:{
                &quot;value&quot;:&quot;string&quot;
              }
            }
          ],
          &quot;isModifier&quot;:{
            &quot;value&quot;:false
          }
        }
      },
      {
        &quot;code&quot;:{
          &quot;value&quot;:&quot;definition&quot;
        },
        &quot;contextType&quot;:{
          &quot;value&quot;:&quot;resource&quot;
        },
        &quot;context&quot;:[
          {
            &quot;value&quot;:&quot;ValueSet.compose.include.code&quot;
          }
        ],
        &quot;definition&quot;:{
          &quot;short&quot;:{
            &quot;value&quot;:&quot;A definition for this code&quot;
          },
          &quot;formal&quot;:{
            &quot;value&quot;:&quot;A display name that describes the meaning of this code when used as part of this value set&quot;
          },
          &quot;comments&quot;:{
            &quot;value&quot;:&quot;This is provided for when the source code system doesn't actually provide a definition (there are many such). Providing an definition for a code should not be done where the underlying code system provides a definition&quot;
          },
          &quot;requirements&quot;:{
            &quot;value&quot;:&quot;Some code systems don't provide definitions (most enumeration types)&quot;
          },
          &quot;min&quot;:{
            &quot;value&quot;:0
          },
          &quot;max&quot;:{
            &quot;value&quot;:&quot;1&quot;
          },
          &quot;type&quot;:[
            {
              &quot;code&quot;:{
                &quot;value&quot;:&quot;string&quot;
              }
            }
          ],
          &quot;isModifier&quot;:{
            &quot;value&quot;:false
          }
        }
      },
      {
        &quot;code&quot;:{
          &quot;value&quot;:&quot;issue-source&quot;
        },
        &quot;contextType&quot;:{
          &quot;value&quot;:&quot;resource&quot;
        },
        &quot;context&quot;:[
          {
            &quot;value&quot;:&quot;OperationOutcome&quot;
          }
        ],
        &quot;definition&quot;:{
          &quot;short&quot;:{
            &quot;value&quot;:&quot;Source of a validation message&quot;
          },
          &quot;formal&quot;:{
            &quot;value&quot;:&quot;Where in the code - schema, schematron, or validator - an error message comes from&quot;
          },
          &quot;comments&quot;:{
            &quot;value&quot;:&quot;Helps a user track down the source of the problem&quot;
          },
          &quot;min&quot;:{
            &quot;value&quot;:0
          },
          &quot;max&quot;:{
            &quot;value&quot;:&quot;1&quot;
          },
          &quot;type&quot;:[
            {
              &quot;code&quot;:{
                &quot;value&quot;:&quot;code&quot;
              }
            }
          ],
          &quot;isModifier&quot;:{
            &quot;value&quot;:false
          },
          &quot;binding&quot;:{
            &quot;value&quot;:&quot;OperationOutcomeSource&quot;
          }
        }
      }
    ],
    &quot;binding&quot;:[
      {
        &quot;name&quot;:{
          &quot;value&quot;:&quot;OperationOutcomeSource&quot;
        },
        &quot;isExtensible&quot;:{
          &quot;value&quot;:true
        },
        &quot;conformance&quot;:{
          &quot;value&quot;:&quot;preferred&quot;
        },
        &quot;referenceResource&quot;:{
          &quot;type&quot;:{
            &quot;value&quot;:&quot;ValueSet&quot;
          },
          &quot;reference&quot;:{
            &quot;value&quot;:&quot;#v1&quot;
          }
        }
      }
    ]
  }
}
</pre>
</div>
</body>
</html>
